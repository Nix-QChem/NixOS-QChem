diff --git a/configure b/configure
index d606d442..91722b54 100755
--- a/configure
+++ b/configure
@@ -2677,8 +2677,8 @@ case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
 
 
 
-molpro_srcdir="`cd ${srcdir}; /bin/pwd`"
-molpro_builddir="`/bin/pwd`"
+molpro_srcdir="`cd ${srcdir}; pwd`"
+molpro_builddir="`pwd`"
 
 { MAKEFLAGS=; unset MAKEFLAGS;}
 { FLEXLM_DIAGNOSTICS=; unset FLEXLM_DIAGNOSTICS;}
@@ -7982,7 +7982,7 @@ case "x${LAPACKLIB}" in
              x*.a ) cd ${i%/*.a}/../../include 1>/dev/null 2>&1 ;;
             esac
             if test -r mkl_direct_call.fi ; then
-             mkl_include="`/bin/pwd`"
+             mkl_include="`pwd`"
              break
             fi
            done
@@ -10099,184 +10099,19 @@ fi
 fi
 
 
-CppNumericalSolvers_sha1="`cat dependencies/CppNumericalSolvers_SHA1`"
-if test ! -r dependencies/CppNumericalSolvers ; then
- CppNumericalSolvers_url="`$AWK '/ CppNumericalSolvers /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${CPPNUMERICALSOLVERS_GIT_REPO:-$CppNumericalSolvers_url} dependencies/CppNumericalSolvers" >&5
-$as_echo "$as_me: git clone -q ${CPPNUMERICALSOLVERS_GIT_REPO:-$CppNumericalSolvers_url} dependencies/CppNumericalSolvers" >&6;}
-eval git clone -q ${CPPNUMERICALSOLVERS_GIT_REPO:-$CppNumericalSolvers_url} dependencies/CppNumericalSolvers || exit 1
-fi
-cd dependencies/CppNumericalSolvers
-if ! git cat-file -t ${CppNumericalSolvers_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${CppNumericalSolvers_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${CppNumericalSolvers_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${CppNumericalSolvers_sha1}" >&6;}
-eval git checkout -q ${CppNumericalSolvers_sha1} || exit 1
- CppNumericalSolvers_updated="true"
-fi
-cd ${molpro_builddir}
-
-
-test "x${CppNumericalSolvers_updated}" = "xtrue" && rm -rf build/usr/include/cppoptlib
-FCIdump_sha1="`cat dependencies/FCIdump_SHA1`"
-if test ! -r dependencies/FCIdump ; then
- FCIdump_url="`$AWK '/ FCIdump /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${FCIDUMP_GIT_REPO:-$FCIdump_url} dependencies/FCIdump" >&5
-$as_echo "$as_me: git clone -q ${FCIDUMP_GIT_REPO:-$FCIdump_url} dependencies/FCIdump" >&6;}
-eval git clone -q ${FCIDUMP_GIT_REPO:-$FCIdump_url} dependencies/FCIdump || exit 1
-fi
-cd dependencies/FCIdump
-if ! git cat-file -t ${FCIdump_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${FCIdump_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${FCIdump_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${FCIdump_sha1}" >&6;}
-eval git checkout -q ${FCIdump_sha1} || exit 1
- FCIdump_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/FCIdump/lib"
 
-gci_sha1="`cat dependencies/gci_SHA1`"
-if test ! -r dependencies/gci ; then
- gci_url="`$AWK '/ gci /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${GCI_GIT_REPO:-$gci_url} dependencies/gci" >&5
-$as_echo "$as_me: git clone -q ${GCI_GIT_REPO:-$gci_url} dependencies/gci" >&6;}
-eval git clone -q ${GCI_GIT_REPO:-$gci_url} dependencies/gci || exit 1
-fi
-cd dependencies/gci
-if ! git cat-file -t ${gci_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${gci_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${gci_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${gci_sha1}" >&6;}
-eval git checkout -q ${gci_sha1} || exit 1
- gci_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/gci/lib"
 
-IterativeSolver_sha1="`cat dependencies/IterativeSolver_SHA1`"
-if test ! -r dependencies/IterativeSolver ; then
- IterativeSolver_url="`$AWK '/ IterativeSolver /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${ITERATIVESOLVER_GIT_REPO:-$IterativeSolver_url} dependencies/IterativeSolver" >&5
-$as_echo "$as_me: git clone -q ${ITERATIVESOLVER_GIT_REPO:-$IterativeSolver_url} dependencies/IterativeSolver" >&6;}
-eval git clone -q ${ITERATIVESOLVER_GIT_REPO:-$IterativeSolver_url} dependencies/IterativeSolver || exit 1
-fi
-cd dependencies/IterativeSolver
-if ! git cat-file -t ${IterativeSolver_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${IterativeSolver_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${IterativeSolver_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${IterativeSolver_sha1}" >&6;}
-eval git checkout -q ${IterativeSolver_sha1} || exit 1
- IterativeSolver_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/IterativeSolver/lib"
 
-memory_sha1="`cat dependencies/memory_SHA1`"
-if test ! -r dependencies/memory ; then
- memory_url="`$AWK '/ memory /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${MEMORY_GIT_REPO:-$memory_url} dependencies/memory" >&5
-$as_echo "$as_me: git clone -q ${MEMORY_GIT_REPO:-$memory_url} dependencies/memory" >&6;}
-eval git clone -q ${MEMORY_GIT_REPO:-$memory_url} dependencies/memory || exit 1
-fi
-cd dependencies/memory
-if ! git cat-file -t ${memory_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${memory_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${memory_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${memory_sha1}" >&6;}
-eval git checkout -q ${memory_sha1} || exit 1
- memory_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/memory/lib"
 
-Profiler_sha1="`cat dependencies/Profiler_SHA1`"
-if test ! -r dependencies/Profiler ; then
- Profiler_url="`$AWK '/ Profiler /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${PROFILER_GIT_REPO:-$Profiler_url} dependencies/Profiler" >&5
-$as_echo "$as_me: git clone -q ${PROFILER_GIT_REPO:-$Profiler_url} dependencies/Profiler" >&6;}
-eval git clone -q ${PROFILER_GIT_REPO:-$Profiler_url} dependencies/Profiler || exit 1
-fi
-cd dependencies/Profiler
-if ! git cat-file -t ${Profiler_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${Profiler_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${Profiler_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${Profiler_sha1}" >&6;}
-eval git checkout -q ${Profiler_sha1} || exit 1
- Profiler_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/Profiler/lib"
 
-symmetry_matrix_sha1="`cat dependencies/symmetry_matrix_SHA1`"
-if test ! -r dependencies/symmetry_matrix ; then
- symmetry_matrix_url="`$AWK '/ symmetry_matrix /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${SYMMETRY_MATRIX_GIT_REPO:-$symmetry_matrix_url} dependencies/symmetry_matrix" >&5
-$as_echo "$as_me: git clone -q ${SYMMETRY_MATRIX_GIT_REPO:-$symmetry_matrix_url} dependencies/symmetry_matrix" >&6;}
-eval git clone -q ${SYMMETRY_MATRIX_GIT_REPO:-$symmetry_matrix_url} dependencies/symmetry_matrix || exit 1
-fi
-cd dependencies/symmetry_matrix
-if ! git cat-file -t ${symmetry_matrix_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${symmetry_matrix_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${symmetry_matrix_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${symmetry_matrix_sha1}" >&6;}
-eval git checkout -q ${symmetry_matrix_sha1} || exit 1
- symmetry_matrix_updated="true"
-fi
-cd ${molpro_builddir}
 DEPENDENCIES="${DEPENDENCIES:+${DEPENDENCIES} }dependencies/symmetry_matrix/lib"
 
 
-dftd4_sha1="`cat dependencies/dftd4_SHA1`"
-if test ! -r dependencies/dftd4 ; then
- dftd4_url="`$AWK '/ dftd4 /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${DFTD4_GIT_REPO:-$dftd4_url} dependencies/dftd4" >&5
-$as_echo "$as_me: git clone -q ${DFTD4_GIT_REPO:-$dftd4_url} dependencies/dftd4" >&6;}
-eval git clone -q ${DFTD4_GIT_REPO:-$dftd4_url} dependencies/dftd4 || exit 1
-fi
-cd dependencies/dftd4
-if ! git cat-file -t ${dftd4_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${dftd4_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${dftd4_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${dftd4_sha1}" >&6;}
-eval git checkout -q ${dftd4_sha1} || exit 1
- dftd4_updated="true"
-fi
-cd ${molpro_builddir}
-
-
 test -d build/dftd4 || dftd4_updated="true"
 if test "x${dftd4_updated}" = "xtrue" ; then
  rm -rf build/dftd4 build/usr
@@ -10300,27 +10135,6 @@ if test "x${dftd4_updated}" = "xtrue" ; then
 fi
 LIBS="-ldftd4${LIBS:+ ${LIBS}}"
 
-GKlib_sha1="`cat dependencies/GKlib_SHA1`"
-if test ! -r dependencies/GKlib ; then
- GKlib_url="`$AWK '/ GKlib /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${GKLIB_GIT_REPO:-$GKlib_url} dependencies/GKlib" >&5
-$as_echo "$as_me: git clone -q ${GKLIB_GIT_REPO:-$GKlib_url} dependencies/GKlib" >&6;}
-eval git clone -q ${GKLIB_GIT_REPO:-$GKlib_url} dependencies/GKlib || exit 1
-fi
-cd dependencies/GKlib
-if ! git cat-file -t ${GKlib_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${GKlib_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${GKlib_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${GKlib_sha1}" >&6;}
-eval git checkout -q ${GKlib_sha1} || exit 1
- GKlib_updated="true"
-fi
-cd ${molpro_builddir}
-
 
 test -d build/GKlib || GKlib_updated="true"
 if test "x${GKlib_updated}" = "xtrue" ; then
@@ -10372,26 +10186,6 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
 LIBS="-lGKlib${LIBS:+ ${LIBS}}"
 
-METIS_sha1="`cat dependencies/METIS_SHA1`"
-if test ! -r dependencies/METIS ; then
- METIS_url="`$AWK '/ METIS /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${METIS_GIT_REPO:-$METIS_url} dependencies/METIS" >&5
-$as_echo "$as_me: git clone -q ${METIS_GIT_REPO:-$METIS_url} dependencies/METIS" >&6;}
-eval git clone -q ${METIS_GIT_REPO:-$METIS_url} dependencies/METIS || exit 1
-fi
-cd dependencies/METIS
-if ! git cat-file -t ${METIS_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${METIS_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${METIS_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${METIS_sha1}" >&6;}
-eval git checkout -q ${METIS_sha1} || exit 1
- METIS_updated="true"
-fi
-cd ${molpro_builddir}
 
 
 test -d build/METIS || METIS_updated="true"
@@ -10446,27 +10240,6 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
 LIBS="-lmetis${LIBS:+ ${LIBS}}"
 
-libxcgrid_sha1="`cat dependencies/libxcgrid_SHA1`"
-if test ! -r dependencies/libxcgrid ; then
- libxcgrid_url="`$AWK '/ libxcgrid /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${LIBXCGRID_GIT_REPO:-$libxcgrid_url} dependencies/libxcgrid" >&5
-$as_echo "$as_me: git clone -q ${LIBXCGRID_GIT_REPO:-$libxcgrid_url} dependencies/libxcgrid" >&6;}
-eval git clone -q ${LIBXCGRID_GIT_REPO:-$libxcgrid_url} dependencies/libxcgrid || exit 1
-fi
-cd dependencies/libxcgrid
-if ! git cat-file -t ${libxcgrid_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${libxcgrid_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${libxcgrid_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${libxcgrid_sha1}" >&6;}
-eval git checkout -q ${libxcgrid_sha1} || exit 1
- libxcgrid_updated="true"
-fi
-cd ${molpro_builddir}
-
 
 test -d build/libxcgrid || libxcgrid_updated="true"
 if test "x${libxcgrid_updated}" = "xtrue" ; then
@@ -10479,26 +10252,6 @@ fi
 LIBS="-lxcgrid${LIBS:+ ${LIBS}}"
 
 dependency_configure="--prefix=${molpro_builddir}/build/usr --libdir=${molpro_builddir}/build/usr/lib LIBS='${given_LIBS}'"
-ppidd_sha1="`cat dependencies/ppidd_SHA1`"
-if test ! -r dependencies/ppidd ; then
- ppidd_url="`$AWK '/ ppidd /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${PPIDD_GIT_REPO:-$ppidd_url} dependencies/ppidd" >&5
-$as_echo "$as_me: git clone -q ${PPIDD_GIT_REPO:-$ppidd_url} dependencies/ppidd" >&6;}
-eval git clone -q ${PPIDD_GIT_REPO:-$ppidd_url} dependencies/ppidd || exit 1
-fi
-cd dependencies/ppidd
-if ! git cat-file -t ${ppidd_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${ppidd_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${ppidd_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${ppidd_sha1}" >&6;}
-eval git checkout -q ${ppidd_sha1} || exit 1
- ppidd_updated="true"
-fi
-cd ${molpro_builddir}
 
 
 test -d build/ppidd || ppidd_updated="true"
@@ -10516,26 +10269,6 @@ eval ../../dependencies/ppidd/configure ${dependency_configure} ${ppidd_options}
 fi
 LIBS="-lppidd${LIBS:+ ${LIBS}}"
 
-libxc_sha1="`cat dependencies/libxc_SHA1`"
-if test ! -r dependencies/libxc ; then
- libxc_url="`$AWK '/ libxc /{print $3}' dependencies/CMakeLists.txt`"
- { $as_echo "$as_me:${as_lineno-$LINENO}: git clone -q ${LIBXC_GIT_REPO:-$libxc_url} dependencies/libxc" >&5
-$as_echo "$as_me: git clone -q ${LIBXC_GIT_REPO:-$libxc_url} dependencies/libxc" >&6;}
-eval git clone -q ${LIBXC_GIT_REPO:-$libxc_url} dependencies/libxc || exit 1
-fi
-cd dependencies/libxc
-if ! git cat-file -t ${libxc_sha1} 1>/dev/null 2>&1 ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git fetch" >&5
-$as_echo "$as_me: git fetch" >&6;}
-eval git fetch || exit 1
-fi
-if test "x`git rev-parse ${libxc_sha1}`" != "x`git rev-parse HEAD`" ; then
- { $as_echo "$as_me:${as_lineno-$LINENO}: git checkout -q ${libxc_sha1}" >&5
-$as_echo "$as_me: git checkout -q ${libxc_sha1}" >&6;}
-eval git checkout -q ${libxc_sha1} || exit 1
- libxc_updated="true"
-fi
-cd ${molpro_builddir}
 
 
 test -d build/libxc || libxc_updated="true"
@@ -10558,7 +10291,6 @@ DIRECTORIES="${DIRECTORIES:+${DIRECTORIES} }${DEPENDENCIES}"
 
 BINARY="${BINARY}.sh"
 test "x${prefix}" = xNONE && prefix="${ac_default_prefix}"
-prefix="${prefix}/molpro_${PACKAGE_VERSION}"
 
  if test "x${FC_VENDOR}" = xintel; then
   case "x${LIBS}" in
diff --git a/develop/Makefile b/develop/Makefile
index 23c2a585..7f43afcb 100644
--- a/develop/Makefile
+++ b/develop/Makefile
@@ -87,7 +87,7 @@ fresh:	molpro
 	  fi ; \
 	done ; \
 	if test -d rii_files ; then rmdir rii_files ; fi ; \
-	name=`/bin/pwd|sed -e 's/\//_/g' -e 's/$$/_molpro.exe/'`; rm -f $$TMPDIR/$$name
+	name=`pwd|sed -e 's/\//_/g' -e 's/$$/_molpro.exe/'`; rm -f $$TMPDIR/$$name
 
 .PHONY: clean
 clean:
diff --git a/src/autoconf/configure/configure.ac b/src/autoconf/configure/configure.ac
index 1a0316c7..8f5ada7b 100644
--- a/src/autoconf/configure/configure.ac
+++ b/src/autoconf/configure/configure.ac
@@ -21,8 +21,8 @@ AC_CANONICAL_BUILD()
 AC_CANONICAL_HOST()
 
 AC_SUBST(molpro_builddir)dnl
-molpro_srcdir="`cd ${srcdir}; /bin/pwd`"
-molpro_builddir="`/bin/pwd`"
+molpro_srcdir="`cd ${srcdir}; pwd`"
+molpro_builddir="`pwd`"
 
 AS_UNSET(MAKEFLAGS)
 AS_UNSET(FLEXLM_DIAGNOSTICS)
diff --git a/src/autoconf/configure/molpro_blas_lapack.m4 b/src/autoconf/configure/molpro_blas_lapack.m4
index a3183726..76e97635 100644
--- a/src/autoconf/configure/molpro_blas_lapack.m4
+++ b/src/autoconf/configure/molpro_blas_lapack.m4
@@ -109,7 +109,7 @@ case "x${LAPACKLIB}" in
              x*.a ) cd ${i%/*.a}/../../include 1>/dev/null 2>&1 ;;
             esac
             if test -r mkl_direct_call.fi ; then
-             mkl_include="`/bin/pwd`"
+             mkl_include="`pwd`"
              break
             fi
            done
diff --git a/utilities/install.template b/utilities/install.template
index b4d8bad7..0e7c20b3 100644
--- a/utilities/install.template
+++ b/utilities/install.template
@@ -19,7 +19,7 @@ install_help () {
 
 batch="0"
 rmdir=""
-curdir="`/bin/pwd`"
+curdir="`pwd`"
 INSTBIN=""
 
 while [ x"${1}" != x ] ; do
@@ -42,7 +42,7 @@ fi
 if [ "x${INSTBIN}" != x ] ; then
  test -d ${INSTBIN} || molpro_error "bin directory (${INSTBIN}) does not exist"
  test -w ${INSTBIN} || molpro_error "write permission denied for ${INSTBIN}"
- INSTBIN="`cd ${INSTBIN}; /bin/pwd`"
+ INSTBIN="`cd ${INSTBIN}; pwd`"
 fi
 if [ x"${batch}" != x1 ] ; then
  echo
@@ -52,7 +52,7 @@ if [ x"${batch}" != x1 ] ; then
 fi
 test -d ${PREFIX} && molpro_error "Molpro destination directory (${PREFIX}) already exists"
 mkdir -p "${PREFIX}" || molpro_error "failed to create directory ${PREFIX}"
-PREFIX="`cd ${PREFIX}; /bin/pwd`"
+PREFIX="`cd ${PREFIX}; pwd`"
 
 sed -e '1,/^_EOF_$/d' ${0} > ${PREFIX}/install.tar
 cd ${PREFIX}
